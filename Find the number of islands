class Solution {
    void solve (int i, int j, int n, int m, vector<vector<char>>& grid) {
        grid[i][j] = '0';
        vector<int> x{-1,-1,-1,0,0,1,1,1};
        vector<int> y{1,0,-1,1,-1,1,0,-1};
        
        for (int idx = 0; idx<8; idx++) {
            int xi = i+x[idx];
            int yi = j+y[idx];
            
            if (xi>=0 && yi >=0 && xi<n && yi<m && grid[xi][yi] == '1') {
                solve(xi,yi,n,m,grid);
            }
        }
    }
  public:
    // Function to find the number of islands.
    int numIslands(vector<vector<char>>& grid) {
        // Code here
          int n = grid.size();
        int m = grid[0].size();
        
        int cnt = 0;
        for (int i=0; i<n; i++) {
            for (int j=0; j<m; j++) {
                if (grid[i][j] == '1') {
                    solve (i,j,n,m,grid);
                    cnt++;
                }
            }
        }
        return cnt;
    }
};
